package com.jtech.config;

event DBConfig {
	string serviceId;
	string databaseURL;
	string user;
	string password;
}

event DBLoaded {}

event DBKey { 
	string city; 
	integer id; 
}

event CreateUpperBoundaryAlert {
	integer id;
	string city;
	float threshold;
}

event CreateLowerBoundaryAlert {
	integer id;
	string city;
	float threshold;
}

event CreateRateThresholdAlert {
	integer id;
	string city;
	float threshold;
	float duration;
}

event DBBoundaryAlert {
	string city;
	integer id;
	float threshold;
	boolean upper;
	
	action fromResult(dictionary<string, string> data) returns DBBoundaryAlert {
		DBBoundaryAlert alert := new DBBoundaryAlert; 
		alert.city := data.getOr("city","");
		alert.id := data.getOr("id", "-1").toInteger();
		alert.threshold := data.getOr("threshold", "-1.0").toFloat();
		if (data.getOr("upper", "true")="1") then { alert.upper:= true; }
		return alert;
	}

	action pprint() returns string {
		return " | ".join(self.getFieldValues());
	}
}

event DBRateAlert {
	string city;
	integer id;
	float percent;
	float duration;
	
	action fromResult(dictionary<string, string> data) returns DBRateAlert {
		DBRateAlert alert := new DBRateAlert; 
		alert.city := data.getOr("city","");
		alert.id := data.getOr("id", "-1").toInteger();
		alert.percent := data.getOr("percent", "1.0").toFloat();
		alert.duration := data.getOr("duration", "60.0").toFloat();
		return alert;
	}

	action pprint() returns string {
		return " | ".join(self.getFieldValues());
	}
}
