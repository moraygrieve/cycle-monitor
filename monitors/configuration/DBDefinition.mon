//Cycle Monitor, Copyright (C) 2016  M.B.Grieve
//This file is part of the Cycle Monitor example application.

//Cycle Monitor is free software: you can redistribute it and/or modify
//it under the terms of the GNU General Public License as published by
//the Free Software Foundation, either version 3 of the License, or
//(at your option) any later version.

//Cycle Monitor is distributed in the hope that it will be useful,
//but WITHOUT ANY WARRANTY; without even the implied warranty of
//MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//GNU General Public License for more details.

//You should have received a copy of the GNU General Public License
//along with City Monitor.  If not, see <http://www.gnu.org/licenses/>.

//Contact: moray.grieve@me.com

package com.jtech.config;

event DBConfig {
	string serviceId;
	string databaseURL;
	string user;
	string password;
}

event DBLoaded {}

event DBKey { 
	string city; 
	integer id; 
}

event CreateUpperBoundaryAlert {
	integer id;
	string city;
	float threshold;
}

event CreateLowerBoundaryAlert {
	integer id;
	string city;
	float threshold;
}

event CreateRateThresholdAlert {
	integer id;
	string city;
	float threshold;
	float duration;
}

event DBBoundaryAlert {
	string city;
	integer id;
	float threshold;
	boolean upper;

	action fromResult(dictionary<string, string> data) returns DBBoundaryAlert {
		DBBoundaryAlert alert := new DBBoundaryAlert; 
		alert.city := data.getOr("city","");
		alert.id := data.getOr("id", "-1").toInteger();
		alert.threshold := data.getOr("threshold", "-1.0").toFloat();
		if (data.getOr("upper", "true")="1") then { alert.upper:= true; }
		return alert;
	}

	action pprint() returns string {
		return " | ".join(self.getFieldValues());
	}
}

event DBRateAlert {
	string city;
	integer id;
	float percent;
	float duration;

	action fromResult(dictionary<string, string> data) returns DBRateAlert {
		DBRateAlert alert := new DBRateAlert; 
		alert.city := data.getOr("city","");
		alert.id := data.getOr("id", "-1").toInteger();
		alert.percent := data.getOr("percent", "1.0").toFloat();
		alert.duration := data.getOr("duration", "60.0").toFloat();
		return alert;
	}

	action pprint() returns string {
		return " | ".join(self.getFieldValues());
	}
}
