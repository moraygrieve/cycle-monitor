package com.jtech.config;
using com.apama.database.DBUtil;

event BoundaryLoader {	
	ILoader this;
	BaseLoader base;
	dictionary< DBAlertKey, DBBoundaryAlert > alerts;

	action init(DBUtil db, action<> onDone) returns ILoader {
		ILoader this := base.init(db, onDone);
		this.doQuery := doQuery;
		return this;
	}

	action doQuery() {
		log "Performing query for boundary alert details; " at INFO;
		base.db.doSQLQueryWithCallback("select * from boundary_alert_config", queryResult, queryDone);
	}

	action getCache() returns dictionary< DBAlertKey, DBBoundaryAlert > {
		return alerts;
	}

	action queryResult(dictionary<string, string> data) {
		string city := data.getOrDefault("city");  
		string id := data.getOrDefault("id"); 
		if (id!="" and city!="") then {        
			alerts.add(DBAlertKey(city, id.toInteger()),(new DBBoundaryAlert).fromResult(data));
		}
	}

	action queryDone(string error, integer eventCount) {
		log "Query complete, boundary alerts are; " at INFO;
		DBAlertKey key; for key in alerts.keys() {
			log "  Boundary alert: " + alerts[key].pprint() at INFO;
		}
		base.onQueryDone();
	}
}