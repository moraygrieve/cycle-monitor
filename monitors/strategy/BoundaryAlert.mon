package com.jtech.alert;
using com.jtech.source.StationUpdate;

monitor BoundaryAlert {
	constant integer PRECEDENCE:=0;
	constant string TYPE:="BOUNDARY";
	event Key { string city; integer id; }
	
	boolean alerted;
	StationUpdate sUpdate;
	dictionary<Key,integer> instances;

	action onload {
		on all StationUpdate():sUpdate {
			Key key := Key(sUpdate.city, sUpdate.id);
			if (not instances.hasKey(key)) then {
				instances.add(key,0);
				spawn tracker(sUpdate.city, sUpdate.id);
			}
		}
	}

	action tracker(string city, integer id) {
		check();
		on all StationUpdate(city=city, id=id) { check(); }
	}

	action check() {
		float ratio:=sUpdate.docked.toFloat() / (sUpdate.docked+sUpdate.empty).toFloat();
		if (not alerted and ratio >= 0.9) then {
			alerted:=true;
			route AddAlert(sUpdate.id, sUpdate.city, TYPE, "Ratio is " + ratio.formatFixed(2), PRECEDENCE);
		}
		else if (alerted and ratio < 0.9) then {
			alerted:=false;
			route RemoveAlert(sUpdate.id, sUpdate.city, TYPE);
		}
	}
}