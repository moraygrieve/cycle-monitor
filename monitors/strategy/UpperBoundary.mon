// Cycle Monitor, Copyright (C) 2015  M.B.Grieve
// This file is part of the Cycle Monitor example application.
//
// Cycle Monitor is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.

// Cycle Monitor is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.

// You should have received a copy of the GNU General Public License
// along with City Monitor.  If not, see <http://www.gnu.org/licenses/>.
//
// Contact: moray.grieve@me.com

package com.jtech.alert;
using com.jtech.source.StationUpdate;

event UpperBoundary {
	constant string  TYPE :="UPPER_BOUNDARY";
	constant string  COLOR:="blue";
	
	AlertStrategy base;
	float threshold;
	
	action init(integer id, string city, float threshold, IAlertManager manager) returns IAlertStrategy {    
		IAlertStrategy this := base.init(id, city, TYPE, COLOR, manager);
		this.check := check;
		
		self.threshold := threshold;
		return this;
	}
    
    //implementation of required actions
	action check(StationUpdate update) {
		log base.prefix+"Ratio" + update.ratio.toString() at DEBUG;
		if (not base.alerted and update.ratio > threshold) then {
			base.alert(update, "Ratio of " + update.ratio.formatFixed(2) + " exceeds limit " + threshold.toString());
		}
		else if (base.alerted and update.ratio <= threshold) then {
			base.clear();
		}
	}
}